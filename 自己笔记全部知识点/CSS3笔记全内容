（更多笔记在CSS3笔记文件夹中）
复习大纲

CSS3：
  1.CSS3的选择器
  2.CSS3新增加的一些常用属性：border-radius、box-shadow、text-shadow
  3.CSS3对于背景的变革（background）；
  -> background: linear-gradient(线性渐变)/ radial-gradient（径向渐变）
  ->  background-size:10px 10px /50% 50% /cover...
  -> background-attachment:fixed(视觉差)
  ->background-origin:设置背景图片起点的位置 border-box /padding-box /content-box
  -> background-clip:背景图片的裁切 border-box /padding-box /content-box
  ->图片滤镜filter的高级处理

4.CSS3变形
->translate:位移
 transform:translate(0,0);
 transform:translate3D(0,0,0);
 transform:translateX(0);
 transform:translateY(0);
 transform:translateZ(0);

->rotate:旋转
 transform：rotate（45deg）===> rotateZ(45deg)/rotateX(0deg)/rotateY(0deg)

->scale:缩放
 transform：scale（1.5）

->skew:倾斜
 transform：skew（15deg）

->matrix:矩阵
 transform：skew（15deg）scale（0.5） rotate（45deg）

5.动画
 ->过渡动画
 transition：[property一般使用的是all] [duration] [timing-fuction包含linear、ease-in\ease-on...]  [dalay没有延迟写0s]

 ->帧动画
 animation:[name][duration] [timing-fuction包含linear、ease-in\ease-on...]  [dalay没有延迟写0s] [iteration-count无限次使用infinite]  [fill-mode动画完成后停留状态等both...]
 @keyframes [name]{
   0%{

   }
   50%{

   }
   100%{

   }
 }

6.CSS3新盒子模型
 ->box-sizing
 ->FlexBOX
 ->columns


7.媒体查询
 @media all and（max-width：640px）{}

8.@font-face导入字体库/字体包


HTML5：
1.新增加的构建页面语义化结构标签
 header、footer、article、section、nav、figure...（HTML.min.js）

2.对于传统的表单元素进行完善
 ->progress、dataList...
 ->给表单元素新增加很多的类型：search、url、email、tel、number、range、date、time...
 ->placeholder
 ->移动端没有keyup、keydown事件，需要使用input事件统一代替
 ->新增加了最新的CSS和JS表单验证

3.audio、video

4.canvas 提供使用代码来绘制图像的

5.一些新兴的API
 ->获取地理位置的（获取用户的经纬度，这样的话就可以挑起第三方的地图（百度\腾讯\ 高德）
 ->本地存储webStorage
 ->离线存储
 ->web socket /web works
****************************************************************************************************
第一类flexbox

1.flexbox是 CSS3 规范中引入的新布局模型：弹性盒模型（flex box）,以用简单的方式满足很多常见的复杂的布局需求,该布局模型的目的是提供一种更加高效的方式来对容器中的条目进行布局、对齐和分配空间。这种布局方式在条目尺寸未知或动态时也能工作.

2.display: flex | inline-flex(适用于父类容器元素上)
定义一个flex容器，内联或者根据指定的值，来作用于下面的子类容器。
box：将对象作为弹性伸缩盒显示。（伸缩盒最老版本2009）
flexbox：将对象作为弹性伸缩盒显示。（伸缩盒过渡版本2011）
flex：将对象作为弹性伸缩盒显示。（伸缩盒最新版本）

3.flex-direction(适用于父类容器的元素上)
确定主轴的方向
flex-direction: row | row-reverse | column | column-reverse
row(默认):主轴为水平方向,从左到右
row-reverse：主轴为水平方向.从右到左
column：主轴为垂直方向,从上到下
column-reverse：主轴为垂直方向,从下到上

4.flex-wrap (适用于父类容器上)
伸缩盒对象的子元素超出父容器时是否换行
flex-wrap: nowrap | wrap | wrap-reverse
nowrap：当子元素溢出父容器时不换行。
wrap：当子元素溢出父容器时自动换行。
wrap-reverse：反转 wrap 排列,(下一行位置与交叉轴位置相反)

5.flex-flow (适用于父类容器上)
flex-flow: <‘flex-direction’> || <‘flex-wrap’>
[?flex-direction?]：定义弹性盒子元素的排列方向。
[?flex-wrap?]：定义弹性盒子元素溢出父容器时是否换行。

6.justify-content (适用于父类容器上)
确定在主轴方向上的对齐方式
justify-content: flex-start | flex-end | center | space-between | space-around
flex-start：该行起始位置
flex-end：该行结束位置
center：该行中央,空间不足,则超出空间
space-between：平均地分布在行里
space-around：平均地分布在行里，两端保留子元素与子元素之间间距大小的一半。

7.align-items (适用于子类容器上)
确定在交叉轴上的对齐方式
align-items: flex-start | flex-end | center | baseline | stretch
flex-start：交叉轴的起始位置
flex-end：交叉轴的结束位置
center：在交叉轴居中
baseline：在基准线上保持对齐
stretch：如果条目的交叉轴尺寸的计算值是“auto”，则其实际使用的值会使得盒子在交叉轴方向上尽可能地占满。

8.align-self (适用于子类容器上)
属性"align-self"的可选值除了align-items列出的之外，还可以设置为"auto"。当"align-self"的值为 auto 时，其计算值是父节点的属性"align-items"的值。如果该节点没有父节点，则计算值为"stretch"。
用来覆写容器指定的对齐方式

9.align-content (适用于父类容器上)
用来处理交叉轴空白空间
align-content: flex-start | flex-end | center | space-between | space-around | stretch?
flex-start：行集中于容器的交叉轴起始位置
flex-end:行集中于容器的交叉轴结束位置
center：行集中于容器的中央
space-between：行在容器中均匀分布。
space-around：行在容器中均匀分布，两端保留子元素与子元素之间间距大小的一半。
stretch：伸展行来占满剩余的空间。多余的空间在行之间平均分配，使得每一行的交叉轴尺寸变大。

10.order (适用于弹性盒模型容器子元素)
用整数值来定义排列顺序，数值小的排在前面。可以为负值。

11.flex-grow (适用于弹性盒模型容器子元素)
设置或检索弹性盒的扩展比率。
根据弹性盒子元素所设置的扩展因子作为比率来分配剩余空间。
flex-grow: <number> (default 0)
		<number>：用数值来定义扩展比率。不允许负值
	flex-grow的默认值为0，如果没有显示定义该属性，是不会拥有分配剩余空间权利的。


12.flex-shrink (适用于弹性盒模型容器子元素)
设置或检索弹性盒的收缩比率（根据弹性盒子元素所设置的收缩因子作为比率来收缩空间。）
flex-shrink: <number> (default 1)
演示：flex-shrink
说明：
flex-shrink的默认值为1，如果没有显示定义该属性，将会自动按照默认值1在所有因子相加之后计算比率来进行空间收缩。


13.flex (适用于弹性盒模型子元素)
复合属性。设置或检索伸缩盒对象的子元素如何分配空间。
如果缩写flex:1, 则其计算值为：1 1 0%
flex：none | [ flex-grow ] || [ flex-shrink ] || [ flex-basis ]
 none：none关键字的计算值为: 0 0 auto
	[?flex-grow?]：定义弹性盒子元素的扩展比率。
	[?flex-shrink?]：定义弹性盒子元素的收缩比率。
	[?flex-basis?]：定义弹性盒子元素的默认基准值。

******************************************************************************************
第二类 html5标签


1.htm5标签
2.html5表单
3.html5音/视频
4.cavans 构建图形界面
5.本地存储,离线存储


结构标签
 构建语义化界面,有利于搜索引擎更好的理解你的页面
 让页面的文档结构更加清晰
 header  页面/页面区块的头部
 section  将页面划分成独立的区块
 article  设置页面的独立区域 为摘要内容设计的,比如说一篇文章
 figure   独立于内容的章节 ,一般情况下放图片 ->插画
 figcaption 图题
 aside  辅助信息,如果删除对整个页面没有影响 常用于侧边栏
 nav 导航栏
 hgroup 组合标题
 footer 底部
 main 主要的重要的内容

表单标签

search (搜索输入框)
tel (电话号码输入框)
url 输入url地址
email 邮件输入框
number 数字输入框
rang 数字滚动条 (通过拖动滚动条改变一定范围内的数字)
color 颜色选取器 只在 Opera 和 Blackberry 浏览器
data 日期选择器 (和datatime与datatime-local相比,少时间框和UTC)
datetime 日期时间选择器 (UTC时间和日期)
datetime-local 本地时间和日期选择器
month月份选择器
week 周选择框
time 时间文本框


媒体标签

video元素 (视频)
audio 元素(音频)
embed元素(用来插入各种媒体,格式可以是Midi,Wav,AIFF,AU,MP3等,相当于一个插
件)

其他功能的标签

mark (高亮显示)
progress (进度条)
time (时间或日期,或同时表示两者)
ruby (注释)
rt (注释内容)
rp (在ruby中使用,以定义不支持ruby元素的浏览器所显示的内容)
wbr (软换行,如果一行放的下则不换行,放不下则才换行)
cavans (图形)
command (命令按钮,如单选按钮,复选框或按钮,但各个浏览器支持不好)
details (用户要求得到并且可以得到详细信息)
summary (和details一起使用,表示标题,用户点击标题时会得到细节信息)
datelist (配合表单元素一起使用,可以设置提示信息)
output (不同类型的输出,比如脚本的输出)
*************************************************************************************************************
表单属性

autocomplete 是否自动填充表单，默认值是 no
autofocus 自动聚焦
formnovalidate 和 novalidate 它俩都表示不需要验证表单,直接提交
pattern 使用正则表达式验证 input 元素的内容
placeholder  输入框占位符，常用作输入提示
required 是否允许为空

全局属性
data-yourvalue 自定义属性
hidden 加上这个属性,元素则是不可见状态
Spellcheck 对你输入的内容纠错
tabindex 按下tab键可以根据设置的顺序进行跳转
contenteditable=”true” 表示这块内容是可以编辑的 去掉则不可以修改
desginMode 在js中控制,页面上所有的元素都可编辑

css3的好处
1.实现很多非常炫的效果
2.提高页面的性能,节省开发时间
css3的兼容性
优雅降级 构建完整的站点,然后再通过调试去兼容浏览器
渐进增强 刚开始构建站点很少的特性,然后再去增加和扩展功能

css3选择器
 关系选择器
 E F E元素后代F元素
 E>F E元素子元素F
 E+F E元素相邻的弟弟节点
 E~F E元素所有的弟弟节点
 结构选择器
  :nth-child(2n+1) 子元素中的第几个
  :nth-of-type(3) 指定类型里的子元素的第几个
  :first-child 第一个子节点
  :last-child 最后一个子节点
  :first-of-type 设定类型的第一个子节点
  :last-of-type 设定类型的最后一个子节点
  :only-child 只有一个子节点
  :only-of-type 只有一个类型的子节点
  :empty  设定父标签下没有任何内容,哪怕是空格
  :not() 不包含哪些元素()是写选择器
  :target 匹配url指向的目标元素

  属性选择器
  E[attr = val] attr等于val
  E[attr|=val] attr等于val或者val-开头
  E[attr*=val] 只要包含val字符串就行
  E[attr~=val] 值可以有多个,其中一个是val就行
  E[attr^=val] 以val开头
  E[attr$=val] 以val结尾

渐变
  线性渐变  颜色是沿着一条直线轴变化
    linear-gradient
    第一个参数 :渐变的方向
    left
    to left
    left bottom
    right top
    45deg 逆时针转45deg
    -45deg 顺时针转45deg
    第二个参数开始用来设置渐变的颜色
    repeating-linear-gradient 重复的线性渐变
 径向渐变 从一个起点向多方向变化  有水平半径/垂直半径(默认是从中心点)
 第一个参数 设置圆点的位置
    径向渐变的形状可以是circle/ellipse
    关键词
    circle at  center ->center center ->50% 50%
    circle at  left  ->left center ->0% 50%
    circle at  right->right center ->100% 50%
    circle at  top->top center ->0% 50%
    circle at  bottom->bottom center ->100% 50%
    circle at 10px 20px

 第二个参数开始设置渐变的颜色
 repeating-radial-gradient 重复的径向渐变
圆角
border-radius
在上右下左四个方向可以设置圆的水平半径和垂直半径
当有边框很大时,会产生一个外半径和内半径
内半径的值 = 外半径-边框 如果值小于零,则内半径呈现直角,否则内半径圆的半径等于外半径-边框
盒子阴影
box-shadow
第一个值:x轴方向偏移 正(右) 负(左)
第二个值:y轴方向偏移 正(下) 负(上)
第三个值:模糊半径(模糊度)
第四个值:扩展半径(阴影的深度) 正(往外扩展) 负(往内收缩)
第五个值:颜色

文本阴影
第一个值:x轴方向偏移 正(右) 负(左)
第二个值:y轴方向偏移 正(下) 负(上)
第三个值:模糊半径(模糊度)
第四个值:颜色

背景(background)
  background-attachment: fixed;
  background-origin(背景图片从哪里开始显示)
  background-origin:padding-box(默认值)|content-box|border-box
  background-clip (从哪个区域开始往外裁剪)
  background-clip:padding-box|content-box|border-box
  background-size (设置背景图片的大小)
  background-size:10px 20px
  background-size:contain|cover
  background-size:50% 50% (百分比相对于当前元素)

多列布局
 column-width 列宽
 column-count 最大列数
 columns 是column-width和column-count的复合写法
 column-gap 列间隙
 column-rule 列边框
 column-gap 横跨所有的列

transition 过渡动画
transform 变形属性(2D   变形方法)
animation 关键帧动画
transform 变形属性(3D变形方法)
**********************************************************************************************************
第三类  动画

http://www.colorzilla.com/gradient-editor/ 渐变工具使用
http://cubic-bezier.com/  赛贝尔曲线
1.transition 过渡动画
    css属性值从起始值向结束值之间实现平滑过渡的效果,只有当css属性值发生变化的时候,transition属性才能被触发,只能设置两种状态
    transition-property 过渡属性
    transition-duration 过渡动画执行的时候
    transition-timing-function 动画类型 ease-in|ease-out|ease-in-out
    transition-delay 动画延迟的时间

    transform变形属性2D方法 平面空间里
    transform:rotate(45deg) 旋转 正(顺) 负(逆)
    transform:skew(15deg,15deg) 倾斜
    transform:translate(15px,50px) 平移
    transform:scale(1,1) 缩放 默认值是1 <1是缩小 >1是放大
    组合起来一起用,但是需要注意顺序
    默认变形的基准点是中心点,rotate,skew,scale基准点可以改变,但是translate基准点永远是中心点
    transform-origin:left center ;第一个参数是x轴坐标 第二个参数是y轴的坐标
    left == left center ==center left

2.关键帧动画
    1.@keyframes 声明关键帧动画
    2.animation调用声明关键帧动画

    @keyframes 动画名{
        0%{
          transform:rotate(0deg)
        }
        100%{
           transform:rotate(360deg)
        }
    }
    animation-name 动画名
    animation-duration 动画执行的时间
    animation-timing-function 动画类型
    animation-delay 动画延迟时间
    animation-interation-count 动画执行的次数 infinite(无限次)
    animation-direction:normal|reverse|alternate|alternate-reverse 动画运行的方向
    animation-fill-mode:none|backwards|forwards|both 动画结束之后的状态
    backwards 回到开始的状态
    forwards 停留在最后一帧
    both 结束后停留在第一帧或最后一帧
    简写写法:
    对着上面细分属性的顺序
    animation:move 1s ease-in 1s 2  alternate forwards

3.transform 3D方法
    transform-style:flat(默认值)|preserve-3d (3D空间里展示) 作用在嵌套着的变形元素的父标签上
    perspective:600px 作用在变形元素的父标签上
    视距 用户与元素在Z轴平面上的距离  距离越小,物体看上去越大,距离越大,物体看上去越小
    transform:perspective(600px) 直接作用在变形元素上
    perspective-origin:right 透视点的位置

    translate3d(tx,ty,tz) translateX() translateY() translateZ()
    translateZ()的效果相当于在平面空间scale()的效果
    scale3d(sx,sy,sz) 默认值1 sx:X轴方向的缩放值 sy:Y轴方向的缩放值 sz:Z轴方向的缩放值 scaleX() scaleY() scaleZ(),scaleZ()不可以单独使用,必须匹配其他变形属性一起使用才有效果
    rotate3d(rx,ry,rz,a) rx,ry,rz参数矢量坐标 a是角度  根据这四个参数算出X轴,y轴,z轴方向的旋转角度 rotate3d(1,0.3,1.7,30deg);
    rotateX(45deg) rotate3d(1,0,0,45deg)    围着X轴上下翻转 正值:往前翻 负值:往后翻
    rotateY(45deg) rotate3d(0,1,0,45deg)    围着y轴左右翻转 正值:往右翻,负值:往左翻
    rotateZ(45deg) rotate3d(0,0,1,45deg)    围着Z轴翻转 效果和rotate()一样,但是是在Z轴上翻转





